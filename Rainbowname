local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

local player = Players.LocalPlayer
local head = player.Character:WaitForChild("Head")
local roleName = head:WaitForChild("Nametag"):WaitForChild("Roleplay_Name")

-- Define the rainbow colors as a sequence of HSV values (smooth transition)
local rainbowColors = {
    Color3.fromHSV(0, 1, 1),    -- Red
    Color3.fromHSV(1/6, 1, 1),  -- Orange
    Color3.fromHSV(2/6, 1, 1),  -- Yellow
    Color3.fromHSV(3/6, 1, 1),  -- Green
    Color3.fromHSV(4/6, 1, 1),  -- Blue
    Color3.fromHSV(5/6, 1, 1),  -- Indigo
    Color3.fromHSV(1, 1, 1)     -- Violet
}

-- Function to create and play a smooth transition tween for color change
local function smoothTransitionColor(fromColor, toColor, duration)
    local tweenInfo = TweenInfo.new(
        duration,                    -- Duration of the tween
        Enum.EasingStyle.Linear,      -- Easing style for smooth transition
        Enum.EasingDirection.InOut,  -- Easing direction for smooth transition
        0,                           -- No repeat count
        false                        -- Don't reverse the tween
    )
    
    -- Goal for the tween (the final color to reach)
    local goal = {TextColor3 = toColor}  -- Adjust this to target the correct property of the Nametag

    -- Create the tween for the role name (targeting TextColor3 of the Nametag)
    local tween = TweenService:Create(roleName, tweenInfo, goal)
    
    -- Play the tween
    tween:Play()

    -- Send the color change to the server
    local args = {
        [1] = "Text",
        [2] = "Change_Color",
        [3] = roleName,
        [4] = toColor,
        [5] = "Role_Color"
    }

    -- Fire the server event to update the color
    ReplicatedStorage:WaitForChild("Events"):WaitForChild("Core_Replication"):FireServer(unpack(args))
end

-- Function to cycle through rainbow colors smoothly
local function cycleRainbowColors()
    while true do
        for i = 1, #rainbowColors - 1 do
            local currentColor = rainbowColors[i]
            local nextColor = rainbowColors[i + 1]

            -- Smoothly transition between the two colors
            smoothTransitionColor(currentColor, nextColor, 2)  -- Adjust the duration for smoothness

            -- Wait until the transition is finished before continuing
            wait(2)  -- This time should match the duration of the transition
        end
    end
end

-- Start the smooth rainbow cycling effect
cycleRainbowColors()
